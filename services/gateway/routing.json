{
  "services": {
    "fitness_gateway": {
      "base_url": "http://fitness.kube-tools.svc.cluster.local",
      "port": 80,
      "routing": [
        {
          "gateway_endpoint": "/api/fitness/google/fit/calories",
          "service_endpoint": "/api/google/fit/calories",
          "allowed_methods": ["GET"]
        },
        {
          "gateway_endpoint": "/api/fitness/google/fit/steps",
          "service_endpoint": "/api/google/fit/steps",
          "allowed_methods": ["GET"]
        },
        {
          "gateway_endpoint": "/api/fitness/google/fit/activity",
          "service_endpoint": "/api/google/fit/activity",
          "allowed_methods": ["GET"]
        },
        {
          "gateway_endpoint": "/api/fitness/google/fit/sync",
          "service_endpoint": "/api/google/fit/sync",
          "allowed_methods": ["POST"]
        },
        {
          "gateway_endpoint": "/api/fitness/google/fit/combined",
          "service_endpoint": "/api/google/fit/combined",
          "allowed_methods": ["GET"]
        },
        {
          "gateway_endpoint": "/api/fitness/mfp/diary/sync",
          "service_endpoint": "/api/mfp/diary/sync",
          "allowed_methods": ["POST"]
        },
        {
          "gateway_endpoint": "/api/fitness/mfp/diary/daily",
          "service_endpoint": "/api/mfp/diary/daily",
          "allowed_methods": ["GET"]
        },
        {
          "gateway_endpoint": "/api/fitness/fitindex/measurements",
          "service_endpoint": "/api/fitindex/measurements",
          "allowed_methods": ["GET"]
        },
        {
          "gateway_endpoint": "/api/fitness/fitindex/latest",
          "service_endpoint": "/api/fitindex/latest",
          "allowed_methods": ["GET"]
        },
        {
          "gateway_endpoint": "/api/fitness/fitindex/sync",
          "service_endpoint": "/api/fitindex/sync",
          "allowed_methods": ["POST"]
        },
        {
          "gateway_endpoint": "/api/fitness/google/client",
          "service_endpoint": "/api/google/client",
          "allowed_methods": ["GET", "POST"]
        },
        {
          "gateway_endpoint": "/api/fitness/google/client",
          "service_endpoint": "/api/google/client",
          "allowed_methods": ["GET", "POST"]
        },
        {
          "gateway_endpoint": "/api/fitness/config",
          "service_endpoint": "/api/fitness/config",
          "allowed_methods": ["GET", "POST"]
        },
        {
          "gateway_endpoint": "/api/fitness/calories/delta",
          "service_endpoint": "/api/fitness/calories/delta",
          "allowed_methods": ["GET"]
        },
        {
          "gateway_endpoint": "/api/fitness/range",
          "service_endpoint": "/api/fitness/range",
          "allowed_methods": ["GET"]
        }
      ]
    },
    "kube_tools_gateway": {
      "base_url": "http://kube-tools.kube-tools.svc.cluster.local",
      "port": 80,
      "routing": [
        {
          "gateway_endpoint": "/api/tools/location/history/query",
          "service_endpoint": "/api/location/history/query",
          "allowed_methods": ["POST"]
        }
      ]
    },
    "vault_gateway": {
      "base_url": "http://vault-api.vault.svc.cluster.local",
      "port": 80,
      "routing": [
        {
          "gateway_endpoint": "/api/vault/secrets/directory/<directory>/key/<key>",
          "service_endpoint": "/api/vault/secrets/directory/<directory>/key/<key>",
          "allowed_methods": ["GET"]
        },
        {
          "gateway_endpoint": "/api/vault/secrets",
          "service_endpoint": "/api/vault/secrets",
          "allowed_methods": ["POST", "PUT"]
        },
        {
          "gateway_endpoint": "/api/vault/secrets/<id>",
          "service_endpoint": "/api/vault/secrets/<id>",
          "allowed_methods": ["DELETE"]
        },
        {
          "gateway_endpoint": "/api/vault/secrets/directory",
          "service_endpoint": "/api/vault/secrets/directory",
          "allowed_methods": ["GET"]
        },
        {
          "gateway_endpoint": "/api/vault/secrets/directory/<directory>",
          "service_endpoint": "/api/vault/secrets/directory/<directory>",
          "allowed_methods": ["GET"]
        },
        {
          "gateway_endpoint": "/api/vault/generate",
          "service_endpoint": "/api/generate",
          "allowed_methods": ["POST"]
        }
      ]
    },
    "kasa_gateway": {
      "base_url": "http://kasa.kube-tools.svc.cluster.local",
      "port": 80,
      "routing": [
        {
          "gateway_endpoint": "/api/kasa/remote",
          "service_endpoint": "/api/remote",
          "allowed_methods": ["GET", "POST"]
        },
        {
          "gateway_endpoint": "/api/kasa/remote/execute",
          "service_endpoint": "/api/remote/execute",
          "allowed_methods": ["POST"]
        },
        {
          "gateway_endpoint": "/api/kasa/device/<id>",
          "service_endpoint": "/api/device/<id>",
          "allowed_methods": ["GET", "DELETE"]
        },
        {
          "gateway_endpoint": "/api/kasa/device",
          "service_endpoint": "/api/device",
          "allowed_methods": ["GET", "POST", "PUT"]
        },
        {
          "gateway_endpoint": "/api/kasa/device/sync",
          "service_endpoint": "/api/device/sync",
          "allowed_methods": ["POST"]
        },
        {
          "gateway_endpoint": "/api/kasa/device/<device_id>/region/<region_id>",
          "service_endpoint": "/api/device/<device_id>/region/<region_id>",
          "allowed_methods": ["POST"]
        },
        {
          "gateway_endpoint": "/api/kasa/scene",
          "service_endpoint": "/api/scene",
          "allowed_methods": ["GET", "POST", "PUT"]
        },
        {
          "gateway_endpoint": "/api/kasa/scene/<id>",
          "service_endpoint": "/api/scene/<id>",
          "allowed_methods": ["GET", "DELETE"]
        },
        {
          "gateway_endpoint": "/api/kasa/scene/<id>/run",
          "service_endpoint": "/api/scene/<id>/run",
          "allowed_methods": ["POST"]
        },
        {
          "gateway_endpoint": "/api/kasa/preset",
          "service_endpoint": "/api/preset",
          "allowed_methods": ["GET", "POST", "PUT"]
        },
        {
          "gateway_endpoint": "/api/kasa/preset/<id>",
          "service_endpoint": "/api/preset/<id>",
          "allowed_methods": ["GET", "DELETE"]
        },
        {
          "gateway_endpoint": "/api/kasa/region",
          "service_endpoint": "/api/region",
          "allowed_methods": ["GET", "POST"]
        },
        {
          "gateway_endpoint": "/api/kasa/scene/category",
          "service_endpoint": "/api/scene/category",
          "allowed_methods": ["GET", "POST"]
        },
        {
          "gateway_endpoint": "/api/kasa/scene/category/<id>",
          "service_endpoint": "/api/scene/category/<id>",
          "allowed_methods": ["DELETE"]
        },
        {
          "gateway_endpoint": "/api/kasa/device/<id>/response",
          "service_endpoint": "/api/device/<id>/response",
          "allowed_methods": ["GET"]
        }
      ]
    },
    "scheduler_gateway": {
      "base_url": "http://net-scheduler.kube-tools.svc.cluster.local",
      "port": "80",
      "routing": [
        {
          "gateway_endpoint": "/api/scheduler/client",
          "service_endpoint": "/api/identityclient",
          "allowed_methods": ["GET"]
        },
        {
          "gateway_endpoint": "/api/scheduler/client/<client_id>/token",
          "service_endpoint": "/api/client/<client_id>/token",
          "allowed_methods": ["GET"]
        },
        {
          "gateway_endpoint": "/api/scheduler/schedule/<schedule_id>",
          "service_endpoint": "/api/schedule/<schedule_id>",
          "allowed_methods": ["GET", "DELETE"]
        },
        {
          "gateway_endpoint": "/api/scheduler/schedule",
          "service_endpoint": "/api/schedule",
          "allowed_methods": ["GET", "POST", "PUT"]
        },
        {
          "gateway_endpoint": "/api/scheduler/schedule/<schedule_id>/run",
          "service_endpoint": "/api/schedule/<schedule_id>/run",
          "allowed_methods": ["POST"]
        },
        {
          "gateway_endpoint": "/api/scheduler/schedule/service/poll",
          "service_endpoint": "/api/schedule/service/poll",
          "allowed_methods": ["GET"]
        },
        {
          "gateway_endpoint": "/api/scheduler/schedule/<schedule_id>/run",
          "service_endpoint": "/api/schedule/<schedule_id>/run",
          "allowed_methods": ["POST"]
        },
        {
          "gateway_endpoint": "/api/scheduler/task",
          "service_endpoint": "/api/task",
          "allowed_methods": ["GET", "PUT", "POST", "DELETE"]
        },
        {
          "gateway_endpoint": "/api/scheduler/task/<task_id>",
          "service_endpoint": "/api/task/<task_id>",
          "allowed_methods": ["GET", "DELETE"]
        }
      ]
    },
    "twilio_gateway": {
      "base_url": "http://twilio-gateway.gateway.svc.cluster.local",
      "probes": ["/api/health/alive", "/api/health/ready"],
      "routing": [
        {
          "gateway_endpoint": "/api/twilio/message",
          "service_endpoint": "/api/twilio/message",
          "allowed_methods": ["POST"]
        }
      ]
    },
    "email_gateway": {
      "base_url": "http://email-gateway.gateway.svc.cluster.local",
      "probes": ["/api/health/alive", "/api/health/ready"],
      "routing": [
        {
          "gateway_endpoint": "/api/email/send",
          "service_endpoint": "/api/email/send",
          "allowed_methods": ["POST"]
        },
        {
          "gateway_endpoint": "/api/email/datatable",
          "service_endpoint": "/api/email/datatable",
          "allowed_methods": ["POST"]
        },
        {
          "gateway_endpoint": "/api/email/json",
          "service_endpoint": "/api/email/json",
          "allowed_methods": ["POST"]
        },
        {
          "gateway_endpoint": "/api/email/styles",
          "service_endpoint": "/api/email/styles",
          "allowed_methods": ["GET"]
        }
      ]
    },
    "reverb_gateway": {
      "base_url": "http://reverb-gateway.gateway.svc.cluster.local",
      "probes": ["/api/health/alive", "/api/health/ready"],
      "routing": [
        {
          "gateway_endpoint": "/api/reverb/orders",
          "service_endpoint": "/api/orders",
          "allowed_methods": ["GET"]
        },
        {
          "gateway_endpoint": "/api/reverb/orders/<order>",
          "service_endpoint": "/api/orders/<order>",
          "allowed_methods": ["GET"]
        },
        {
          "gateway_endpoint": "/api/reverb/orders/<order>/tracking",
          "service_endpoint": "/api/orders/<order>/tracking",
          "allowed_methods": ["POST"]
        },
        {
          "gateway_endpoint": "/api/reverb/shipengine/shipments/<order>",
          "service_endpoint": "/api/shipengine/shipments/<order>",
          "allowed_methods": ["POST"]
        }
      ]
    },
    "shipengine_gateway": {
      "base_url": "http://shipengine-gateway.gateway.svc.cluster.local",
      "probes": ["/api/health/alive", "/api/health/ready"],
      "routing": [
        {
          "gateway_endpoint": "/api/shipengine/carriers",
          "service_endpoint": "/api/carriers",
          "allowed_methods": ["GET"]
        },
        {
          "gateway_endpoint": "/api/shipengine/carriers/balances",
          "service_endpoint": "/api/carriers/balances",
          "allowed_methods": ["GET"]
        },
        {
          "gateway_endpoint": "/api/shipengine/carriers/services",
          "service_endpoint": "/api/carriers/services",
          "allowed_methods": ["GET"]
        },
        {
          "gateway_endpoint": "/api/shipengine/shipments/<shipment_id>/label",
          "service_endpoint": "/api/shipments/<shipment_id>/label",
          "allowed_methods": ["GET", "POST"]
        },
        {
          "gateway_endpoint": "/api/shipengine/rates",
          "service_endpoint": "/api/rates",
          "allowed_methods": ["POST"]
        },
        {
          "gateway_endpoint": "/api/shipengine/shipment",
          "service_endpoint": "/api/shipment",
          "allowed_methods": ["POST", "GET"]
        },
        {
          "gateway_endpoint": "/api/shipengine/shipment/<shipment_id>/cancel",
          "service_endpoint": "/api/shipment/<shipment_id>/cancel",
          "allowed_methods": ["PUT"]
        }
      ]
    },
    "azure_gateway": {
      "base_url": "http://azure-gateway.gateway.svc.cluster.local",
      "probes": ["/api/health/alive", "/api/health/ready"],
      "routing": [
        {
          "gateway_endpoint": "/api/azure/usage",
          "service_endpoint": "/api/usage",
          "allowed_methods": ["GET"]
        },
        {
          "gateway_endpoint": "/api/azure/cost/timeframe/daily/groupby/product",
          "service_endpoint": "/api/cost/timeframe/daily/groupby/product",
          "allowed_methods": ["GET"]
        },
        {
          "gateway_endpoint": "/api/azure/logs/query",
          "service_endpoint": "/api/logs/query",
          "allowed_methods": ["POST"]
        },
        {
          "gateway_endpoint": "/api/azure/logs/tables",
          "service_endpoint": "/api/logs/tables",
          "allowed_methods": ["GET"]
        },
        {
          "gateway_endpoint": "/api/azure/aks/pods/names",
          "service_endpoint": "/api/aks/pods/names",
          "allowed_methods": ["GET"]
        },
        {
          "gateway_endpoint": "/api/azure/aks/pods/images",
          "service_endpoint": "/api/aks/pods/images",
          "allowed_methods": ["GET"]
        },
        {
          "gateway_endpoint": "/api/azure/aks/<namespace>/<pod>/logs",
          "service_endpoint": "/api/aks/<namespace>/<pod>/logs",
          "allowed_methods": ["GET"]
        },
        {
          "gateway_endpoint": "/api/azure/acr/repositories",
          "service_endpoint": "/api/acr/repositories",
          "allowed_methods": ["GET"]
        },
        {
          "gateway_endpoint": "/api/azure/acr/manifests",
          "service_endpoint": "/api/acr/manifests",
          "allowed_methods": ["GET", "DELETE"]
        },
        {
          "gateway_endpoint": "/api/azure/authentication/scoped",
          "service_endpoint": "/api/authentication/scoped",
          "allowed_methods": ["POST"]
        },
        {
          "gateway_endpoint": "/api/azure/authentication/resource",
          "service_endpoint": "/api/authentication/resource",
          "allowed_methods": ["POST"]
        },
        {
          "gateway_endpoint": "/api/azure/devops/builds/<project>/name/<build_name>",
          "service_endpoint": "/api/devops/builds/<project>/name/<build_name>",
          "allowed_methods": ["POST"]
        },
        {
          "gateway_endpoint": "/api/azure/devops/builds/<project>",
          "service_endpoint": "/api/devops/builds/<project>",
          "allowed_methods": ["GET"]
        },
        {
          "gateway_endpoint": "/api/azure/ad/applications",
          "service_endpoint": "/api/ad/applications",
          "allowed_methods": ["GET"]
        }
      ]
    }
  }
}
